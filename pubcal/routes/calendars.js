"use strict";
const express = require('express');
const helper = require('../libs/icalGeneratorHelper');
const router = express.Router();
const mongo = require('mongodb').MongoClient;
const connectToDB = () => {
    let url = process.env.MONGO_URL;
    return new Promise((resolve, reject) => {
        mongo.connect(url, (err, db) => {
            if (err) {
                reject(err);
            } else {
                resolve(db);
            }
        });
    });
};

// GET calendar listing.
router.get('/', function (req, res, next) {
    res.send('GET list of calendars');
});

// GET calendar form
router.get('/new', function (req, res, next) {
    res.render('calendars/new', {calendar: {}});
});

// POST calendar form
router.post('/new', function (req, res, next) {
    let calendar = req.body.calendar;

    //TODO: check return value
    let filepath = helper.createCalendar(calendar);

    //Construct list of subscribed users
    calendar.users_subscribed = [];
    //Add creator as a subscriber
    calendar.users_subscribed.push(calendar.created_by);
    //Add filepath generated by helper
    calendar.filepath = filepath;

    //TODO: refactor into a model possibly?
    //insert into mongodb
    let database = null;
    connectToDB()
        .then((db) => {
            database = db;
            return db.collection('calendars').insertOne(calendar);
        })
        .then(function (writeResult) {
            console.log(writeResult);
            if (writeResult.ok = 1) {
                res.json({"status": "success", "id": writeResult.insertedId});
            } else {
                console.error("Failed inserting new calendar into db");
                res.json({"status": "failed"});
            }
        })
        .then(()=> {
            database.close();
        });

});

// GET a calendar with id
router.get('/:id', function (req, res, next) {
    res.send('GET calendar with id' + req.params.id);
});


module.exports = router;
